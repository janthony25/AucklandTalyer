@model List<AucklandTalyer.Models.Dto.CustomerIssueDto>



<div class="container mt-4">
    <h2 class="text-info">Customer Details</h2>

    <div class="border border-secondary p-3 col-3 mb-4">        
            <p><span class="text-info">Rego:</span><span class="fw-bold"> @Model[0].CarRego</span></p>
            <p><span class="text-info">Customer Name:</span><span class="fw-bold"> @Model[0].CustomerName</span></p>
            <p><span class="text-info">Car Make:</span><span class="fw-bold"> @Model[0].CarMake</span> </p>
            <p><span class="text-info">Car Model:</span><span class="fw-bold"> @Model[0].CarModel</span> </p>
            <p><span class="text-info">Payment Status:</span><span class="fw-bold"> @Model[0].PaymentStatus</span> </p>
        @* <p>@Model.FirstOrDefault().</p> *@
    </div>
    <div>
        <div class="row mb-2">
            <div class="col-6">
                <h3 class="text-info">Car Issue</h3>
            </div>
            <div class="col-6 text-end">
                
                   <a asp-controller="Issue" asp-action="Create" asp-route-Rego="@Model.FirstOrDefault().CarRego" class="btn btn-warning text-uppercase"><i class="bi bi-plus-circle"></i> Add Item</a>
                
            </div>
        </div>
            <table class="table table-bordered table-striped">
                <thead class="text-center align-middle">
                    <tr>
                        <th hidden></th>
                        <th>Problem</th>
                        <th>Description</th>
                        <th></th>
                    </tr>
                </thead>
                <tbody class="text-center align-center" id="issueList">
                @foreach(var issue in Model)
                {
                    <tr class="align-center">
                        <td hidden>@issue.IssueId</td>
                        <td>@issue.IssueName</td>
                        <td>@issue.IssueDescription</td>
                        <td>
                            <button type="button" class="btn btn-warning btnEditIssue" data-bs-toggle="modal" data-bs-target="#problemDetailsModal" id="btnEditIssue">
                                <i class="bi bi-pencil-square"></i>
                            </button>
                           @*  <button type="button" data-value="@issue.IssueId" id="addPartsModal" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#exampleModal">
                                Add Parts Need
                            </button> *@
                        </td>
                    </tr>
                }
            </tbody>

            </table>
    </div>
        
    </div>
</div>

 @* VIEW PROBLEM MODAL *@
<div class="modal fade" id="problemDetailsModal" tabindex="-1" aria-labelledby="exampleModalLabel2" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header d-flex justify-content-between">
                    
                    <div>
                        @* <h5>
                        Car Issue: 
                        
                            <span class="fw-bold">@Model.FirstOrDefault().IssueName</span>
                        
                    </h5> *@
                    <h5 class="modal-title fw-bold" id="modalIssueName"></h5>
                    </div>
                    <div>
                            <div>
                            @* <button type="button" data-value="@Model[0].IssueId" id="btnAddPartsModal" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#addPartsModal"> *@
                        <button type="button" data-value="" id="btnAddPartsModal" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#addPartsModal">
                                    Add Parts Need
                        </button>
                            </div>   
                    </div>
            </div>
            <div class="modal-body">
                <table class="table table-bordered table-striped" id="issueWithPartsTable">
                    <thead>
                        <tr>
                            
                            <th>Part Name</th>
                            <th>Price ($)</th>
                        </tr>
                    </thead>
                    <tbody>
                    </tbody>
                </table>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div> 


 @* ADD PARTS MODAL *@
<div class="modal fade" id="addPartsModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Add Parts</h5>
                <label id="modalValue" ></label>  
               @*  <label id="modalValueTEST" ></label> *@
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <table class="table table-bordered table-striped" id="partsTable">
                    <thead>
                        <tr>
                            <th></th>
                            <th>Part Name</th>
                            <th>Price ($)</th>
                        </tr>
                    </thead>
                     <tbody>
                    </tbody> 
                </table>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-toggle="modal" data-bs-target="#problemDetailsModal">
                    Back
                </button>
            @*     <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button> *@
                <button type="button" id="saveSelectedRowsBtn" class="btn btn-primary">Add</button>
            </div>
        </div>
    </div>
</div>


<script>
    $(document).ready(function () 
    {
      
        // AJAX request to the server to retrieve data
        $.ajax({
            url: "/Parts/GetPartsData",
            type: 'GET',
            dataType: 'json',
            success: function (data) {
                // On successful response, call a function to populate the table
                populateTable(data);
            },
            error: function (xhr, status, error) {
                console.error(xhr.responseText);
            }
        });

       
        $('#issueList').on('click', '.btnEditIssue', function () {
            // Select the first cell in the first row of the table
            // var issueId = $('#issueList tr:first-child td:first-child').text();

           // var issueId = $('#issueList').find('td:first-child').text();
           // var issueId = $('#issueList tr:first').find('td:first').text(); // WORKING
            var issueId = $(this).closest('tr').find('td:first').text(); // GET the ID of the selected Row
            var issueName = $(this).closest('tr').find('td:nth-child(2)').text(); // Assuming IssueName is in the second column

            // Update the modal's title with the IssueName
            $('#btnAddPartsModal').attr('data-value', issueId);
            $('#modalIssueName').text(issueName);
            console.log('Issue ID:', issueId);

            refreshPartsInIssue(issueId);
            $('#btnAddPartsModal').data('value', issueId);
            $('#problemDetailsModal').modal('show');

          

            

            // REMOVE THE CHECKED ITEMS ON THE LIST EVERYTIME THE MODAL CLOSES
        });
        $('#problemDetailsModal').on('hidden.bs.modal', function () {
            // Uncheck all checkboxes
            $('input[name="selectedRows"]').prop('checked', false);
        });
  
        
    
        // Pass data of checked check box
        $('#saveSelectedRowsBtn').click(function () {
            var checkedRows = [];
            var issueId = $('#modalValue').text();  
            $('input[name="selectedRows"]:checked').each(function () {
                var partsId = $(this).val();
                checkedRows.push({ partsId: partsId, issueId: issueId });
             //   var name = $(this).closest('tr').find('td:eq(1)').text(); // Get the name from the second column
             //   var price = $(this).closest('tr').find('td:eq(2)').text(); // Get Price from the 3rd column
               
             // checkedRows.push({ id: id, name: name, price: price });

                // var issueId = $(this).closest('tr').find('td:first').text();

                // // Your logic to handle the issueId
                // console.log("Issue ID of the selected row: " + issueId);

                // // Rest of your code...
                // var checkedRows = [];
                // $('input[name="selectedRows"]:checked').each(function () {
                //     var partsId = $(this).val();
                //     checkedRows.push({ partsId: partsId, issueId: issueId });
                // });
               
            });
            console.log(checkedRows); // Output checked rows to console

            $.ajax({
                url: '@Url.Action("AddPartsInIssue", "Parts")',
                type: 'POST',
                data: { selectedRows: checkedRows },
                success: function (response) {
                    // Handle success response
                 //   console.log('Selected rows saved successfully.');
                    refreshPartsInIssue(issueId);
                },
                error: function (xhr, status, error) {
                    // Handle error
                    console.error('Error:', error);
                }
            });

            // RETRIVE DATA OF PARTS NEED IN MODAL
            
            $('#addPartsModal').modal('hide');
            $('#problemDetailsModal').modal('show');
            
           
        });
        
        // Add Parts Button
        $('#btnAddPartsModal').click(function () {
            var value = $(this).data('value'); // Get the value from the data-value attribute
            $('#modalValue').text(value); // Set the value in the modal
            $('#addPartsModal').modal('show'); // Show the modal
        });

    });

    function populateTable(data) {
        // Clear existing table rows
        $('#partsTable tbody').empty();

        // Iterate through the data and populate table rows
        $.each(data, function (index, item) {
            // Append a new row to the table body
         //   $('#partsTable tbody').append('<tr><td value="item.partsId">' + <label value="item.partsId" class="form-check-label" for= "flexCheckDefault" > + '</td><td value="item.partsName">' + item.partsName + '</td></tr>');
            $('#partsTable tbody').append('<tr><td><input name="selectedRows" class="form-check-input" type="checkbox" id="checkbox_' + item.partsId + '" value="' + item.partsId + '"></td><td>' + item.partsName + '</td><td>' + item.partsPrice + '</tr>');

        });
    }


   // PUPULATE DATA TABLE FOR ISSUE WITH PARTS TBALE
    function populateIssueWithPartsTable(data) {
        // Clear existing table rows    
        $('#issueWithPartsTable tbody').empty();

        // Iterate through the data and populate table rows
        $.each(data, function (index, item) {
            // Append a new row to the table body
            //   $('#partsTable tbody').append('<tr><td value="item.partsId">' + <label value="item.partsId" class="form-check-label" for= "flexCheckDefault" > + '</td><td value="item.partsName">' + item.partsName + '</td></tr>');
            $('#issueWithPartsTable tbody').append('<tr><td>' + item.partsName + '</td><td>' + item.partsPrice + '</tr>');

        });
    }

    function refreshPartsInIssue(issueId) {
        $.ajax({
            url: "/Issue/GetPartsInIssue",
            type: 'GET',
            dataType: 'json',
            data: { id: issueId },
            success: function (data) {
                // On successful response, call a function to populate the table


                populateIssueWithPartsTable(data);
               
            },
            error: function (xhr, status, error) {
                console.error(xhr.responseText);
            }
        });
    }


</script>